{"version":3,"sources":["text.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["text","randomNumber","max","min","Math","ceil","floor","random","generateQuestion","a","b","result","generateMultipleQuestion","generateMultipleQuestions","length","index","push","ReadingLessions","useState","readingLessionIndex","setReadingLessionIndex","randomSeed","setRandomSeed","lessionContent","readingLessions","className","map","_","onClick","sort","slice","r","FirstStep","choose","Cell","value","type","TableSum","questions","TableMultiple","TableSub","App","step","setStep","testingType","setTestingType","generateSumQuestions","testingBody","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"6LAoQeA,G,MApQF,CACT,CACI,KACA,QACA,QACA,UACA,UACA,KACA,QACA,QACA,UACA,UACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,KACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,CACI,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,UACA,UACA,aACA,eACA,UACA,aACA,UACA,UACA,gBAEJ,CACI,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,KACA,QACA,MAEJ,CACI,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,WAEJ,CACI,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,UACA,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,WAEJ,CACI,KACA,KACA,QACA,UACA,KACA,QACA,KACA,KACA,KACA,UACA,MACA,MACA,SACA,WACA,MACA,SACA,MACA,MACA,MACA,MACA,SACA,MACA,OAEJ,CACI,KACA,KACA,QACA,UACA,KACA,UACA,MACA,SACA,MACA,MACA,MACA,SACA,WACA,MACA,WACA,OACA,UACA,QAEJ,CACI,MACA,MACA,SACA,WACA,MACA,SACA,MACA,MACA,WACA,MACA,MACA,SACA,WACA,MACA,SACA,MACA,MACA,YAEJ,CACI,MACA,MACA,SACA,WACA,MACA,SACA,MACA,MACA,WACA,MACA,MACA,SACA,WACA,MACA,SACA,MACA,MACA,YAEJ,CACI,MACA,MACA,SACA,WACA,MACA,SAC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","file":"static/js/main.6009539c.chunk.js","sourcesContent":["const text = [\n    [\n        \"ca\",\n        \"cà\",\n        \"cá\",\n        \"cả\",\n        \"cạ\",\n        \"co\",\n        \"cò\",\n        \"có\",\n        \"cỏ\",\n        \"cọ\",\n        \"cô\",\n        \"cồ\",\n        \"cố\",\n        \"cổ\",\n        \"cỗ\",\n        \"cộ\",\n        \"cơ\",\n        \"cờ\",\n        \"cớ\",\n        \"cỡ\",\n        \"cu\",\n        \"cù\",\n        \"cú\",\n        \"củ\",\n        \"cũ\",\n        \"cụ\",\n        \"cư\",\n        \"cừ\",\n        \"cứ\",\n        \"cử\",\n        \"cữ\",\n        \"cự\"\n    ],\n    [\n        \"ba\",\n        \"bo\",\n        \"bô\",\n        \"bơ\",\n        \"be\",\n        \"bê\",\n        \"bi\",\n        \"bu\",\n        \"bư\",\n        \"da\",\n        \"do\",\n        \"dô\",\n        \"dơ\",\n        \"de\",\n        \"dê\",\n        \"di\",\n        \"du\",\n        \"dư\",\n        \"đa\",\n        \"đo\",\n        \"đô\",\n        \"đơ\",\n        \"đe\",\n        \"đê\",\n        \"đi\",\n        \"đu\",\n        \"đư\"\n    ],\n    [\n        \"ha\",\n        \"ho\",\n        \"hô\",\n        \"hơ\",\n        \"he\",\n        \"hê\",\n        \"hi\",\n        \"hu\",\n        \"hư\",\n        \"la\",\n        \"lo\",\n        \"lô\",\n        \"lơ\",\n        \"le\",\n        \"lê\",\n        \"li\",\n        \"lu\",\n        \"lư\",\n        \"ke\",\n        \"kê\",\n        \"ki\"\n    ],\n    [\n        \"ta\",\n        \"tp\",\n        \"tô\",\n        \"tơ\",\n        \"te\",\n        \"tê\",\n        \"ti\",\n        \"tu\",\n        \"tư\",\n        \"na\",\n        \"no\",\n        \"nô\",\n        \"nơ\",\n        \"ne\",\n        \"nê\",\n        \"ni\",\n        \"nu\",\n        \"nư\",\n        \"ma\",\n        \"mo\",\n        \"mô\",\n        \"mơ\",\n        \"me\",\n        \"mê\",\n        \"mi\",\n        \"mu\",\n        \"mư\"\n    ],\n    [\n        \"va\",\n        \"vo\",\n        \"vô\",\n        \"vơ\",\n        \"ve\",\n        \"vê\",\n        \"vi\",\n        \"vu\",\n        \"vư\",\n        \"ra\",\n        \"ro\",\n        \"rô\",\n        \"rơ\",\n        \"re\",\n        \"rê\",\n        \"ri\",\n        \"ru\",\n        \"rư\",\n        \"sa\",\n        \"so\",\n        \"sô\",\n        \"sơ\",\n        \"se\",\n        \"sê\",\n        \"si\",\n        \"su\",\n        \"sư\",\n        \"xa\",\n        \"xo\",\n        \"xô\",\n        \"xơ\",\n        \"xe\",\n        \"xê\",\n        \"xi\",\n        \"xu\",\n        \"xư\"\n    ],\n    [\n        \"pa\",\n        \"po\",\n        \"pô\",\n        \"pơ\",\n        \"pe\",\n        \"pê\",\n        \"pi\",\n        \"py\",\n        \"pu\",\n        \"pư\",\n        \"pha\",\n        \"pho\",\n        \"phô\",\n        \"phơ\",\n        \"phe\",\n        \"phê\",\n        \"phi\",\n        \"phu\",\n        \"qua\",\n        \"que\",\n        \"quê\",\n        \"qui\",\n        \"quy\"\n    ],\n    [\n        \"ga\",\n        \"go\",\n        \"gô\",\n        \"gơ\",\n        \"gu\",\n        \"gư\",\n        \"ghe\",\n        \"ghê\",\n        \"ghi\",\n        \"nga\",\n        \"ngo\",\n        \"ngô\",\n        \"ngơ\",\n        \"ngu\",\n        \"ngư\",\n        \"nghe\",\n        \"nghê\",\n        \"nghi\"\n    ],\n    [\n        \"cha\",\n        \"cho\",\n        \"chô\",\n        \"chơ\",\n        \"che\",\n        \"chê\",\n        \"chi\",\n        \"chu\",\n        \"chư\",\n        \"tra\",\n        \"tro\",\n        \"trô\",\n        \"trơ\",\n        \"tre\",\n        \"trê\",\n        \"tri\",\n        \"tru\",\n        \"trư\"\n    ],\n    [\n        \"nha\",\n        \"nho\",\n        \"nhô\",\n        \"nhơ\",\n        \"nhe\",\n        \"nhê\",\n        \"nhi\",\n        \"nhu\",\n        \"như\",\n        \"tha\",\n        \"tho\",\n        \"thô\",\n        \"thơ\",\n        \"the\",\n        \"thê\",\n        \"thi\",\n        \"thu\",\n        \"thư\"\n    ],\n    [\n        \"gia\",\n        \"gio\",\n        \"giô\",\n        \"giơ\",\n        \"gie\",\n        \"giê\",\n        \"gi\",\n        \"giu\",\n        \"giư\",\n        \"kha\",\n        \"kho\",\n        \"khô\",\n        \"khơ\",\n        \"khe\",\n        \"khê\",\n        \"khi\",\n        \"khu\",\n        \"khư\"\n    ]\n]\nexport default text;","import { useState } from 'react';\nimport './App.css';\nimport readingLessions from \"./text.js\"\n\nconst MAX_SINGLE = 10\nconst MAX_QUESTIONS = 5\n\nfunction randomNumber(max, min = 1) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction generateQuestion() {\n  const a = randomNumber(MAX_SINGLE)\n  const b = randomNumber(MAX_SINGLE)\n  const sum = a + b\n  const c = randomNumber(3, 0)\n  const result = [a, b, sum]\n  result[c] = null;\n  return result;\n}\n\nfunction generateMultipleQuestion() {\n  const a = randomNumber(6, 2)\n  const b = randomNumber(6, 2)\n  const multiple = Math.ceil(a * b)\n  const c = randomNumber(3, 0)\n  const result = [a, b, multiple]\n  result[c] = null\n  return result\n}\n\nfunction generateSumQuestions(length) {\n  const result = [];\n  for (let index = 0; index < length; index++) {\n    result.push(generateQuestion())\n  }\n  return result;\n}\n\nfunction generateMultipleQuestions(length) {\n  const result = [];\n  for (let index = 0; index < length; index++) {\n    result.push(generateMultipleQuestion())\n  }\n  return result;\n}\n\nfunction App() {\n  const [step, setStep] = useState(0)\n  const [testingType, setTestingType] = useState(0)\n  if (step === 0) {\n    return <FirstStep choose={(choose) => {\n      setStep(1);\n      setTestingType(choose);\n    }} />;\n  }\n  const questions = generateSumQuestions(MAX_QUESTIONS)\n  let testingBody = null;\n  switch (testingType) {\n    case 0:\n      testingBody = <TableSum questions={questions} />;\n      break;\n    case 1:\n      testingBody = <TableSub questions={questions} />;\n      break;\n    case 2:\n      testingBody = <ReadingLessions />;\n      break;\n    case 3:\n      testingBody = <TableMultiple questions={generateMultipleQuestions(5)} />\n      break;\n    default:\n      testingBody = <TableSum questions={questions} />;\n      break;\n  }\n  return (\n    <div className=\"App\">\n      {testingBody}\n    </div>\n  );\n}\n\nfunction ReadingLessions() {\n  const [readingLessionIndex, setReadingLessionIndex] = useState(null)\n  const [randomSeed, setRandomSeed] = useState(0)\n  const lessionContent = readingLessions[readingLessionIndex]\n  return (\n    <div>\n      <div className=\"reading-lessions-selector\">\n        {readingLessions.map((_, index) => (<button key={index} onClick={() => {\n          setRandomSeed(Math.random())\n          setReadingLessionIndex(index);\n        }\n        }>{index + 1}</button>))}\n      </div>\n      <div className=\"hidden\">\n        {randomSeed}\n      </div>\n      {lessionContent && <div className=\"reading-lession-content\">\n        {lessionContent.sort(() => Math.random() - 0.5).slice(0, 5).map(r => (<div key={r}>{r}</div>))}\n      </div>\n      }\n    </div>\n  )\n}\n\nfunction FirstStep({ choose }) {\n  return <div className=\"first-step-container\">\n    <button onClick={() => choose(0)}>+</button>\n    <button onClick={() => choose(1)}>-</button>\n    <button onClick={() => choose(3)}>x</button>\n    <button onClick={() => choose(2)}>Aa</button>\n  </div>\n}\n\nfunction Cell({ value }) {\n  if (value === null) {\n    return <input type=\"number\" className=\"hint\" />\n  }\n  return <div>{value}</div>\n}\n\nfunction TableSum({ questions }) {\n  // const rows = []\n  // for (let index = 0; index < questions.length; index++) {\n  //   const element = questions[index];\n  //   console.log(rows);\n\n  //   if (index % 2 === 0) {\n  //     rows.push([element])\n  //   } else {\n  //     rows[rows.length - 1].push(element)\n  //   }\n  // }\n  return (\n    <div className=\"App\">\n      <table>\n        <tbody>\n          {questions.map((r, index) => (\n            <tr key={index}>\n              <td >\n                <div className=\"question-container\">\n                  <Cell value={r[0]} />&nbsp;\n                  <div>+</div>&nbsp;\n                  <Cell value={r[1]} />&nbsp;\n                  <div>=</div>&nbsp;\n                  <Cell value={r[2]} />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction TableMultiple({ questions }) {\n  return (\n    <div className=\"App\">\n      <table>\n        <tbody>\n          {questions.map((r, index) => (\n            <tr key={index}>\n              <td >\n                <div className=\"question-container\">\n                  <Cell value={r[0]} />&nbsp;\n                  <div>x</div>&nbsp;\n                  <Cell value={r[1]} />&nbsp;\n                  <div>=</div>&nbsp;\n                  <Cell value={r[2]} />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction TableSub({ questions }) {\n  // const rows = []\n  // for (let index = 0; index < questions.length; index++) {\n  //   const element = questions[index];\n  //   console.log(rows);\n\n  //   if (index % 2 === 0) {\n  //     rows.push([element])\n  //   } else {\n  //     rows[rows.length - 1].push(element)\n  //   }\n  // }\n  return (\n    <div className=\"App\">\n      <table>\n        <tbody>\n          {questions.map((r, index) => (\n            <tr key={index}>\n              <td >\n                <div className=\"question-container\">\n                  <Cell value={r[2]} />&nbsp;\n                  <div>-</div>&nbsp;\n                  <Cell value={r[1]} />&nbsp;\n                  <div>=</div>&nbsp;\n                  <Cell value={r[0]} />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}