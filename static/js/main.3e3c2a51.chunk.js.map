{"version":3,"sources":["double-text.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["text","randomNumber","max","min","Math","ceil","floor","random","generateQuestion","a","b","result","generateMultipleQuestion","generateMultipleQuestions","length","index","push","ReadingLessions","useState","readingLessionIndex","setReadingLessionIndex","randomSeed","setRandomSeed","lessionContent","readingLessions","className","map","_","onClick","sort","slice","r","NineMultiple","currentPointer","setCurrentPointer","nineMultipleQuestions","q","Cell","value","FirstStep","choose","type","TableSum","questions","TableMultiple","TableSub","App","step","setStep","testingType","setTestingType","generateSumQuestions","testingBody","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3e3c2a51.chunk.js","sourcesContent":["const text = [[\"có cà\", \"có cá\", \"có cỗ\", \"cổ cò\", \"cá cờ\", \"cụ cố\"], [\"ba ba\", \"be bé\", \"bi bô\", \"bí đỏ\", \"dỗ bé\", \"dỡ củ\", \"e dè\", \"dê dễ\", \"đo đỏ\", \"đơ đỡ\", \"bờ đê\", \"đi đò\", \"đu đủ\", \"da bò\", \"bế bé\", \"ô dù\", \"dì Ba\", \"đỗ đỏ\", \"đổ đá\", \"đá dế\"], [\"hạ cờ\", \"hổ dữ\", \"hồ cá\", \"hả hê\", \"ê ke\", \"bé ho\", \"kẽ hở\", \"lá hẹ\", \"lá đa\", \"kì cọ\", \"lọ đỗ\", \"lơ là\", \"le le\", \"đi lễ\", \"kể lể\", \"lê la\", \"lá cờ\", \"lọ cổ\", \"cũ kĩ\", \"ki bo\"], [\"ô tô\", \"nơ đỏ\", \"cá mè\", \"cử tạ\", \"tủ to\", \"no nê\", \"ba má\", \"ca mổ\", \"tử tế\", \"na to\", \"bố mẹ\", \"má nẻ\", \"củ từ\", \"ca nô\", \"mũ nỉ\", \"nụ cà\"], [\"cá rô\", \"hè về\", \"xổ số\", \"su sú\", \"bó rạ\", \"tò vò\", \"sư tử\", \"số ne\", \"rổ rá\", \"vỗ về\", \"xe bò\", \"xẻ đá\", \"bộ rễ\", \"vở vẽ\", \"đi xa\", \"lá sả\"], [\"pí po\", \"pí pô\", \"pí pa pí pô\", \"phở bò\", \"quà quê\", \"tổ phó\", \"phố xá\", \"cá quả\", \"phì phò\", \"cà phê\", \"qua phà\", \"vỏ quế\"], [\"gà gô\", \"ghế gỗ\", \"bé ngã\", \"nghé ọ\", \"tủ gỗ\", \"ghi vở\", \"ngồ ngộ\", \"củ nghệ\", \"gỗ gụ\", \"ghẹ to\", \"bỡ ngỡ\", \"nghĩ kĩ\", \"gõ mõ\", \"ghê sợ\", \"cá ngừ\", \"ngô nghê\"], [\"cha mẹ\", \"che chở\", \"tra ngô\", \"cá trê\", \"chó xù\", \"chị Hà\", \"chỉ trỏ\", \"vũ trụ\", \"chỗ ở\", \"chú rể\", \"trở về\", \"dự trữ\", \"đi chợ\", \"chữ số\", \"lá tre\", \"lí trí\"], [\"nhà thờ\", \"nhè nhẹ\", \"thả cá\", \"the thé\", \"quả nho\", \"lí nhí\", \"chú thỏ\", \"lê thê\", \"nhổ cỏ\", \"nhu nhú\", \"xe thồ\", \"quả thị\", \"nhớ nhà\", \"như ý\", \"thơ ca\", \"cá thu\", \"nhớ nhà\", \"nho nhỏ\", \"thủ thỉ\", \"thứ tự\"], [\"gia vị\", \"gió to\", \"giẻ cũ\", \"khổ sở\", \"bà già\", \"giò chả\", \"giữ nhà\", \"khơ me\", \"giá cả\", \"giỏ cá\", \"khe khẽ\", \"quả khế\", \"giả da\", \"giỗ tổ\", \"kha khá\", \"chú khỉ\", \"giã giò\", \"thì giờ\", \"kho cá\", \"khu đô thị\", \"quá khứ\", \"cá khô\", \"tú lơ khơ\", \"khí\"]]\n\nexport default text;","import { useState } from 'react';\nimport './App.css';\nimport readingLessions from \"./double-text\"\n\nconst MAX_SINGLE = 15\nconst MAX_QUESTIONS = 5\n\nfunction randomNumber(max, min = 1) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction generateQuestion() {\n  const a = randomNumber(MAX_SINGLE)\n  const b = randomNumber(MAX_SINGLE)\n  const sum = a + b\n  const c = randomNumber(3, 0)\n  const result = [a, b, sum]\n  result[c] = null;\n  return result;\n}\n\nfunction generateMultipleQuestion() {\n  const a = randomNumber(6, 2)\n  const b = randomNumber(6, 2)\n  const multiple = Math.ceil(a * b)\n  const c = randomNumber(3, 0)\n  const result = [a, b, multiple]\n  result[c] = null\n  return result\n}\n\nfunction generateSumQuestions(length) {\n  const result = [];\n  for (let index = 0; index < length; index++) {\n    result.push(generateQuestion())\n  }\n  return result;\n}\n\nfunction generateMultipleQuestions(length) {\n  const result = [];\n  for (let index = 0; index < length; index++) {\n    result.push(generateMultipleQuestion())\n  }\n  return result;\n}\n\nfunction App() {\n  const [step, setStep] = useState(0)\n  const [testingType, setTestingType] = useState(0)\n  if (step === 0) {\n    return <FirstStep choose={(choose) => {\n      setStep(1);\n      setTestingType(choose);\n    }} />;\n  }\n  const questions = generateSumQuestions(MAX_QUESTIONS)\n  let testingBody = null;\n  switch (testingType) {\n    case 0:\n      testingBody = <TableSum questions={questions} />;\n      break;\n    case 1:\n      testingBody = <TableSub questions={questions} />;\n      break;\n    case 2:\n      testingBody = <ReadingLessions />;\n      break;\n    case 3:\n      testingBody = <TableMultiple questions={generateMultipleQuestions(5)} />\n      break;\n    case 4:\n      testingBody = <NineMultiple />\n      break\n    default:\n      testingBody = <TableSum questions={questions} />;\n      break;\n  }\n  return (\n    <div className=\"App\">\n      {testingBody}\n    </div>\n  );\n}\n\nfunction ReadingLessions() {\n  const [readingLessionIndex, setReadingLessionIndex] = useState(null)\n  const [randomSeed, setRandomSeed] = useState(0)\n  const lessionContent = readingLessions[readingLessionIndex]\n  return (\n    <div>\n      <div className=\"reading-lessions-selector\">\n        {readingLessions.map((_, index) => (<button key={index} onClick={() => {\n          setRandomSeed(Math.random())\n          setReadingLessionIndex(index);\n        }\n        }>{index + 1}</button>))}\n      </div>\n      <div className=\"hidden\">\n        {randomSeed}\n      </div>\n      {lessionContent && <div className=\"reading-lession-content\">\n        {lessionContent.sort(() => Math.random() - 0.5).slice(0, 5).map(r => (<div key={r}>{r}</div>))}\n      </div>\n      }\n    </div>\n  )\n}\n\nfunction NineMultiple() {\n  const [currentPointer, setCurrentPointer] = useState(null)\n  const nineMultipleQuestions = []\n  for (let index = 1; index <= 9; index++) {\n    const q = [currentPointer, index, currentPointer * index]\n    q[2] = null\n    nineMultipleQuestions.push(q)\n  }\n  return (\n    <div>\n      <div className=\"reading-lessions-selector\">\n        {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((index) => (<button key={index} onClick={() => {\n          setCurrentPointer(index);\n        }\n        }>{index}</button>))}\n      </div>\n      {\n        currentPointer && (<table>\n          <tbody>\n            {nineMultipleQuestions.map((r, index) => (\n              <tr key={index}>\n                <td >\n                  <div className=\"question-container\">\n                    <Cell value={r[0]} />&nbsp;\n                    <div>x</div>&nbsp;\n                    <Cell value={r[1]} />&nbsp;\n                    <div>=</div>&nbsp;\n                    <Cell value={r[2]} />\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>)\n      }\n    </div>\n  )\n}\n\nfunction FirstStep({ choose }) {\n  return <div className=\"first-step-container\">\n    <button onClick={() => choose(0)}>+</button>\n    <button onClick={() => choose(1)}>-</button>\n    <button onClick={() => choose(3)}>x</button>\n    <button onClick={() => choose(4)}>9x</button>\n    <button onClick={() => choose(2)}>Aa</button>\n  </div>\n}\n\nfunction Cell({ value }) {\n  if (value === null) {\n    return <input type=\"number\" className=\"hint\" />\n  }\n  return <div>{value}</div>\n}\n\nfunction TableSum({ questions }) {\n  // const rows = []\n  // for (let index = 0; index < questions.length; index++) {\n  //   const element = questions[index];\n  //   console.log(rows);\n\n  //   if (index % 2 === 0) {\n  //     rows.push([element])\n  //   } else {\n  //     rows[rows.length - 1].push(element)\n  //   }\n  // }\n  return (\n    <div className=\"App\">\n      <table>\n        <tbody>\n          {questions.map((r, index) => (\n            <tr key={index}>\n              <td >\n                <div className=\"question-container\">\n                  <Cell value={r[0]} />&nbsp;\n                  <div>+</div>&nbsp;\n                  <Cell value={r[1]} />&nbsp;\n                  <div>=</div>&nbsp;\n                  <Cell value={r[2]} />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction TableMultiple({ questions }) {\n  return (\n    <div className=\"App\">\n      <table>\n        <tbody>\n          {questions.map((r, index) => (\n            <tr key={index}>\n              <td >\n                <div className=\"question-container\">\n                  <Cell value={r[0]} />&nbsp;\n                  <div>x</div>&nbsp;\n                  <Cell value={r[1]} />&nbsp;\n                  <div>=</div>&nbsp;\n                  <Cell value={r[2]} />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction TableSub({ questions }) {\n  // const rows = []\n  // for (let index = 0; index < questions.length; index++) {\n  //   const element = questions[index];\n  //   console.log(rows);\n\n  //   if (index % 2 === 0) {\n  //     rows.push([element])\n  //   } else {\n  //     rows[rows.length - 1].push(element)\n  //   }\n  // }\n  return (\n    <div className=\"App\">\n      <table>\n        <tbody>\n          {questions.map((r, index) => (\n            <tr key={index}>\n              <td >\n                <div className=\"question-container\">\n                  <Cell value={r[2]} />&nbsp;\n                  <div>-</div>&nbsp;\n                  <Cell value={r[1]} />&nbsp;\n                  <div>=</div>&nbsp;\n                  <Cell value={r[0]} />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}